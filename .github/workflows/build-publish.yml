name: Build & Publish

on:
  push:
    branches: [main]
    tags: [v*.*.*]
  pull_request:
    branches: [main]

env:
  DOCKER: 0
  PROG: rexray

jobs:
  build:
    if: false
    runs-on: ubuntu-latest
    env:
      DRIVER: ${{ matrix.driver }}
      GOARCH: ${{ matrix.arch }}
      GOOS: ${{ matrix.os }}
      XGOARCH: ${{ matrix.arch }}
      XGOOS: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.24]
        os: [linux]
        arch: [amd64, arm, arm64]
        driver:
        - ""
        - azureud
        - cinder
        - csi-nfs
        - dobs
        - ebs
        - efs
        - gcepd
        - isilon
        - rbd
        - s3fs
        - scaleio
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        check-latest: true
        go-version: ${{ matrix.go-version }}

    - name: Build
      run: |
        make
        md5sum $PROG
        ls -al $PROG
        file $PROG
        [[ "$GOARCH" == "amd64" ]] && ./$PROG version

  docker-plugin:
    runs-on: ubuntu-latest
    env:
      DOCKER_PLUGIN_ROOT: "ghcr.io/${{ github.repository }}"
      DRIVER: ${{ matrix.driver }}
      GOARCH: ${{ matrix.arch }}
      GOOS: ${{ matrix.os }}
      XGOARCH: ${{ matrix.arch }}
      XGOOS: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.24]
        os: [linux]
        arch: [amd64]
        driver:
        #- azureud
        #- cinder
        #- csi-nfs
        #- dobs
        - ebs
        - efs
        #- gcepd
        #- isilon
        #- rbd
        - s3fs
        #- scaleio
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Log into ghcr.io registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        check-latest: true
        go-version: ${{ matrix.go-version }}

    - name: Build
      run: |
        make
        md5sum $PROG
        ls -al $PROG
        file $PROG
        [[ "$GOARCH" == "amd64" ]] && ./$PROG version

    - name: Build Docker Plugin
      run: make build-docker-plugin

    - name: Push Docker Plugin
      run: make push-docker-plugin

    - name: Add Latest Tag
      if: github.event_name != 'pull_request'
      run: |
        go install github.com/google/go-containerregistry/cmd/crane@latest
        source semver.env
        crane tag "${DOCKER_PLUGIN_ROOT}/${DRIVER}:${SEMVER/+/-}" latest

  test:
    if: false
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.24]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        check-latest: true
        go-version: ${{ matrix.go-version }}

    - name: Test
      run: |
        go run core/semver/semver.go -f json
        make test
        make cover
